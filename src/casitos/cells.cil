Types:
	Object{
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Object:initialize_Object
	}
	Int{
		attribute value
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Int:initialize_Int
	}
	Bool{
		attribute value
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Bool:initialize_Bool
	}
	IO{
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
	}
	String{
		attribute value
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method length:String_length
		method concat:String_concat
		method substr:String_substring
		method initialize_String:initialize_String
	}
	CellularAutomaton{
		attribute population_map
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
		method init:CellularAutomaton_init
		method print:CellularAutomaton_print
		method num_cells:CellularAutomaton_num_cells
		method cell:CellularAutomaton_cell
		method cell_left_neighbor:CellularAutomaton_cell_left_neighbor
		method cell_right_neighbor:CellularAutomaton_cell_right_neighbor
		method cell_at_next_evolution:CellularAutomaton_cell_at_next_evolution
		method evolve:CellularAutomaton_evolve
		method initialize_CellularAutomaton:initialize_CellularAutomaton
	}
	Main{
		attribute cells
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Object:initialize_Object
		method main:Main_main
		method initialize_Main:initialize_Main
	}
Data:
	_vacio=""
	x_11="
"
	x_55="X"
	x_63="X"
	x_72="X"
	x_81="X"
	x_83="."
	x_109="         X         "
Code:
	initialize_Object{
		Arg instance
	}
	initialize_Int{
		Arg instance
	}
	initialize_Bool{
		Arg instance
	}
	initialize_IO{
		Arg instance
	}
	initialize_String{
		Arg instance
	}
	Object_copy{
		Arg to_copy
		Local isvoid
		Local save_copy
		save_copy = Copy to_copy
	}
	Object_abort{
		Arg self_Object
		Local isvoid
		halt
	}
	Object_type_name{
		Arg self_Object
		Local name
		Local type_name_ref
		Local isvoid
		name = Typeof self_Object
		type_name_ref = Type_Name name
	}
	IO_out_string{
		Arg out_string
		Arg self_IO
		Local isvoid
		Print out_string
		out_string = self_IO
	}
	IO_out_int{
		Arg out_int
		Arg self_IO
		Local isvoid
		Print out_int
		out_int = self_IO
	}
	IO_in_string{
		Arg self_IO
		Local isvoid
		Local x_in_string
		x_in_string = Read
	}
	IO_in_int{
		Arg self_IO
		Local x_in_int
		Local isvoid
		x_in_int = Read
	}
	String_length{
		Arg x_str
		Local x_str_length
		Local isvoid
		x_str_length = Length x_str
	}
	String_concat{
		Arg self_String
		Arg x_str1
		Local x_str_concat
		Local isvoid
		x_str_concat = Concat x_str1 self_String
	}
	String_substring{
		Arg self_String
		Arg x_j
		Arg x_i
		Local x_sub_str
		Local isvoid
		x_sub_str = Substring self_String x_j x_i
	}
	CellularAutomaton_init{
		Arg x__1
		Arg self_CellularAutomaton
		Local isvoid
		Local x_2
		Local x_3
		SetAttr self_CellularAutomaton 0 x__1
		x_2 = GetAttr self_CellularAutomaton 0
		x_3 = self_CellularAutomaton
	}
	CellularAutomaton_print{
		Arg self_CellularAutomaton
		Local isvoid
		Local x_4
		Local x_5
		Local x_7
		Local x_6
		Local x_8
		Local x_9
		Local x_10
		Local x_12
		Local x_13
		x_6 = GetAttr self_CellularAutomaton 0
		x_9 = Allocate String
		SetAttr x_9 0 x_6
		x_8 = Typeof x_9
		x_12 = Load x_11 -> 

		x_10 = x_12
		Param x_10 0
		Param x_9 1
		x_7 = VCall x_8 concat
		x_5 = x_7
		Param x_5 0
		Param self_CellularAutomaton 1
		x_4 = VCall CellularAutomaton out_string
		x_13 = self_CellularAutomaton
	}
	CellularAutomaton_num_cells{
		Arg self_CellularAutomaton
		Local isvoid
		Local x_15
		Local x_14
		Local x_16
		Local x_17
		x_14 = GetAttr self_CellularAutomaton 0
		x_17 = Allocate String
		SetAttr x_17 0 x_14
		x_16 = Typeof x_17
		Param x_17 0
		x_15 = VCall x_16 length
	}
	CellularAutomaton_cell{
		Arg x__18
		Arg self_CellularAutomaton
		Local isvoid
		Local x_20
		Local x_19
		Local x_21
		Local x_22
		Local x_23
		Local x_24
		Local x_25
		x_19 = GetAttr self_CellularAutomaton 0
		x_22 = Allocate String
		SetAttr x_22 0 x_19
		x_21 = Typeof x_22
		x_23 = x__18
		x_25 = 1
		x_24 = x_25
		Param x_23 0
		Param x_24 1
		Param x_22 2
		x_20 = VCall x_21 substr
	}
	CellularAutomaton_cell_left_neighbor{
		Arg x__26
		Arg self_CellularAutomaton
		Local isvoid
		Local x_27
		Local x_28
		Local x_29
		Local x_30
		Local x_31
		Local x_32
		Local x_33
		Local x_34
		Local x_35
		Local x_36
		Local x_37
		Local x_38
		x_27 = 0
		x_28 = x__26 == x_27
		x_38 = x_28
		If x_38 Goto LABEL0
		Param self_CellularAutomaton 0
		x_31 = VCall CellularAutomaton num_cells
		x_32 = 1
		x_33 = x_31 - x_32
		x_30 = x_33
		Param x_30 0
		Param self_CellularAutomaton 1
		x_29 = VCall CellularAutomaton cell
		x_38 = x_29
		Goto LABEL1
		LABEL0:
		x_36 = 1
		x_37 = x__26 - x_36
		x_35 = x_37
		Param x_35 0
		Param self_CellularAutomaton 1
		x_34 = VCall CellularAutomaton cell
		x_38 = x_34
		LABEL1:
	}
	CellularAutomaton_cell_right_neighbor{
		Arg x__39
		Arg self_CellularAutomaton
		Local isvoid
		Local x_40
		Local x_41
		Local x_42
		Local x_43
		Local x_44
		Local x_45
		Local x_46
		Local x_47
		Local x_48
		Local x_49
		Local x_50
		Local x_51
		Param self_CellularAutomaton 0
		x_40 = VCall CellularAutomaton num_cells
		x_41 = 1
		x_42 = x_40 - x_41
		x_43 = x__39 == x_42
		x_51 = x_43
		If x_51 Goto LABEL2
		x_46 = 0
		x_45 = x_46
		Param x_45 0
		Param self_CellularAutomaton 1
		x_44 = VCall CellularAutomaton cell
		x_51 = x_44
		Goto LABEL3
		LABEL2:
		x_49 = 1
		x_50 = x__39 + x_49
		x_48 = x_50
		Param x_48 0
		Param self_CellularAutomaton 1
		x_47 = VCall CellularAutomaton cell
		x_51 = x_47
		LABEL3:
	}
	CellularAutomaton_cell_at_next_evolution{
		Arg x__52
		Arg self_CellularAutomaton
		Local isvoid
		Local x_53
		Local x_54
		Local x_56
		Local x_57
		Local x_58
		Local x_59
		Local x_60
		Local x_61
		Local x_62
		Local x_64
		Local x_65
		Local x_66
		Local x_67
		Local x_68
		Local x_69
		Local x_70
		Local x_71
		Local x_73
		Local x_74
		Local x_75
		Local x_76
		Local x_77
		Local x_78
		Local x_79
		Local x_80
		Local x_82
		Local x_84
		Local x_85
		x_54 = x__52
		Param x_54 0
		Param self_CellularAutomaton 1
		x_53 = VCall CellularAutomaton cell
		x_56 = Load x_55 -> X
		x_57 = x_53 =String= x_56
		x_60 = x_57
		If x_60 Goto LABEL4
		x_58 = 1
		x_60 = x_58
		Goto LABEL5
		LABEL4:
		x_59 = 0
		x_60 = x_59
		LABEL5:
		x_62 = x__52
		Param x_62 0
		Param self_CellularAutomaton 1
		x_61 = VCall CellularAutomaton cell_left_neighbor
		x_64 = Load x_63 -> X
		x_65 = x_61 =String= x_64
		x_68 = x_65
		If x_68 Goto LABEL6
		x_66 = 1
		x_68 = x_66
		Goto LABEL7
		LABEL6:
		x_67 = 0
		x_68 = x_67
		LABEL7:
		x_69 = x_60 + x_68
		x_71 = x__52
		Param x_71 0
		Param self_CellularAutomaton 1
		x_70 = VCall CellularAutomaton cell_right_neighbor
		x_73 = Load x_72 -> X
		x_74 = x_70 =String= x_73
		x_77 = x_74
		If x_77 Goto LABEL8
		x_75 = 1
		x_77 = x_75
		Goto LABEL9
		LABEL8:
		x_76 = 0
		x_77 = x_76
		LABEL9:
		x_78 = x_69 + x_77
		x_79 = 1
		x_80 = x_78 == x_79
		x_85 = x_80
		If x_85 Goto LABEL10
		x_82 = Load x_81 -> X
		x_85 = x_82
		Goto LABEL11
		LABEL10:
		x_84 = Load x_83 -> .
		x_85 = x_84
		LABEL11:
	}
	CellularAutomaton_evolve{
		Arg self_CellularAutomaton
		Local isvoid
		Local x__86
		Local x_87
		Local x__88
		Local x__89
		Local x_90
		Local x_91
		Local x_92
		Local x_93
		Local x_94
		Local x_95
		Local x_96
		Local x__89
		Local x_98
		Local x_99
		Local x__86
		Local x_101
		Local x_102
		Local x_103
		x__86 = 0
		Param self_CellularAutomaton 0
		x_87 = VCall CellularAutomaton num_cells
		x__88 = x_87
		x__89 = Load _vacio -> 
		LABEL12:
		x_90 = x__86 < x__88
		x_101 = x_90
		If x_101 Goto LABEL13
		x_93 = Allocate String
		SetAttr x_93 0 x__89
		x_92 = Typeof x_93
		x_96 = x__86
		Param x_96 0
		Param self_CellularAutomaton 1
		x_95 = VCall CellularAutomaton cell_at_next_evolution
		x_94 = x_95
		Param x_94 0
		Param x_93 1
		x_91 = VCall x_92 concat
		x__89 = x_91
		x_98 = 1
		x_99 = x__86 + x_98
		x__86 = x_99
		Goto LABEL12
		LABEL13:
		SetAttr self_CellularAutomaton 0 x__89
		x_102 = GetAttr self_CellularAutomaton 0
		x_103 = self_CellularAutomaton
	}
	initialize_CellularAutomaton{
		Arg self_CellularAutomaton
		Local isvoid
		Local x_0
		Local return
		x_0 = Load _vacio -> 
		SetAttr self_CellularAutomaton 0 x_0
		x_0 = Load _vacio -> 
		return = self_CellularAutomaton
	}
	Main_main{
		Arg self_Main
		Local isvoid
		Local x_106
		Local x_104
		Local x_105
		Local x_107
		Local x_108
		Local x_110
		Local x_111
		Local x_113
		Local x_112
		Local x_114
		Local x_115
		Local x__116
		Local x_117
		Local x_118
		Local x_120
		Local x_119
		Local x_121
		Local x_123
		Local x_122
		Local x_124
		Local x_125
		Local x_126
		Local x__116
		Local x_128
		Local x_129
		x_104 = Allocate CellularAutomaton
		Param x_104 0
		x_105 = Call initialize_CellularAutomaton
		x_107 = Typeof x_104
		x_110 = Load x_109 ->          X         
		x_108 = x_110
		Param x_108 0
		Param x_104 1
		x_106 = VCall x_107 init
		SetAttr self_Main 0 x_106
		x_111 = GetAttr self_Main 0
		x_112 = GetAttr self_Main 0
		x_114 = Typeof x_112
		Param x_112 0
		x_113 = VCall x_114 print
		x_115 = 20
		x__116 = x_115
		LABEL14:
		x_117 = 0
		x_118 = x_117 < x__116
		x_128 = x_118
		If x_128 Goto LABEL15
		x_119 = GetAttr self_Main 0
		x_121 = Typeof x_119
		Param x_119 0
		x_120 = VCall x_121 evolve
		x_122 = GetAttr self_Main 0
		x_124 = Typeof x_122
		Param x_122 0
		x_123 = VCall x_124 print
		x_125 = 1
		x_126 = x__116 - x_125
		x__116 = x_126
		Goto LABEL14
		LABEL15:
		x_129 = self_Main
	}
	initialize_Main{
		Arg self_Main
		Local isvoid
		Local return
		SetAttr self_Main 0 isvoid
		return = self_Main
	}
	main{
		Local x_131
		Local x_132
		Local x_130
		x_131 = Allocate Main
		Param x_131 0
		x_130 = Call initialize_Main
		Param x_131 0
		x_132 = Call Main_main
		halt
	}
