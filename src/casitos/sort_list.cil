Types:
	Object{
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Object:initialize_Object
	}
	Int{
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Int:initialize_Int
	}
	Bool{
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Bool:initialize_Bool
	}
	IO{
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
	}
	String{
		method abort:Object_abort
		method type_name:Object_type_name
		method length:String_length
		method concat:String_concat
		method substring:String_substring
		method initialize_String:initialize_String
	}
	List{
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
		method isNil:List_isNil
		method cons:List_cons
		method car:List_car
		method cdr:List_cdr
		method rev:List_rev
		method sort:List_sort
		method insert:List_insert
		method rcons:List_rcons
		method print_list:List_print_list
		method initialize_List:initialize_List
	}
	Cons{
		attribute xcar
		attribute xcdr
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
		method isNil:Cons_isNil
		method cons:List_cons
		method car:Cons_car
		method cdr:Cons_cdr
		method rev:Cons_rev
		method sort:Cons_sort
		method insert:Cons_insert
		method rcons:Cons_rcons
		method print_list:Cons_print_list
		method initialize_List:initialize_List
		method init:Cons_init
		method initialize_Cons:initialize_Cons
	}
	Nil{
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
		method isNil:Nil_isNil
		method cons:List_cons
		method car:List_car
		method cdr:List_cdr
		method rev:Nil_rev
		method sort:Nil_sort
		method insert:Nil_insert
		method rcons:Nil_rcons
		method print_list:Nil_print_list
		method initialize_List:initialize_List
		method initialize_Nil:initialize_Nil
	}
	Main{
		attribute l
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
		method iota:Main_iota
		method main:Main_main
		method initialize_Main:initialize_Main
	}
Data:
	_vacio="vacio"
	s_object="Object"
	x_86="
"
	x_127="How many numbers to sort?"
Code:
	initialize_Object{
		Arg instance
	}
	initialize_Int{
		Arg instance
	}
	initialize_Bool{
		Arg instance
	}
	initialize_IO{
		Arg instance
	}
	initialize_String{
		Arg instance
	}
	Object_abort{
		Local isvoid
		halt
	}
	Object_type_name{
		Local name
		Local isvoid
		name = Load s_object -> Object
	}
	IO_out_string{
		Arg out_string
		Arg self_IO
		Local isvoid
		Print out_string
	}
	IO_out_int{
		Arg out_int
		Arg self_IO
		Local isvoid
		Print out_int
	}
	IO_in_string{
		Arg self_IO
		Local isvoid
		Local x_in_string
		x_in_string = Read
	}
	IO_in_int{
		Arg self_IO
		Local x_in_int
		Local isvoid
		x_in_int = Read
	}
	String_length{
		Arg x_str
		Local x_str_length
		Local isvoid
		x_str_length = Length x_str
	}
	String_concat{
		Arg x_str2
		Arg x_str1
		Local x_str_concat
		Local isvoid
		x_str_concat = Concat x_str1 x_str2
	}
	String_substring{
		Arg x_string
		Arg x_j
		Arg x_i
		Local x_sub_str
		Local isvoid
		x_sub_str = Substring x_i x_j x_string
	}
	List_isNil{
		Arg self_List
		Local isvoid
		Local x_0
		Local x_1
		Param self_List 0
		x_0 = VCall List abort
		x_1 = 1
	}
	List_cons{
		Arg x__2
		Arg self_List
		Local isvoid
		Local x_3
		Local x_4
		Local x__5
		Local x_6
		Local x_7
		Local x_8
		Local x_9
		Local x_10
		x_3 = Allocate Cons
		Param x_3 0
		x_4 = Call initialize_Cons
		x__5 = x_3
		x_7 = Typeof x__5
		x_8 = x__2
		x_10 = self_List
		x_9 = x_10
		Param x_8 0
		Param x_9 1
		Param x__5 2
		x_6 = VCall x_7 init
	}
	List_car{
		Arg self_List
		Local isvoid
		Local x_11
		Local x_12
		Local x_13
		Param self_List 0
		x_11 = VCall List abort
		x_12 = Allocate Int
		Param x_12 0
		x_13 = Call initialize_Int
	}
	List_cdr{
		Arg self_List
		Local isvoid
		Local x_14
		Local x_15
		Local x_16
		Param self_List 0
		x_14 = VCall List abort
		x_15 = Allocate List
		Param x_15 0
		x_16 = Call initialize_List
	}
	List_rev{
		Arg self_List
		Local isvoid
		Local x_17
		Param self_List 0
		x_17 = VCall List cdr
	}
	List_sort{
		Arg self_List
		Local isvoid
		Local x_18
		Param self_List 0
		x_18 = VCall List cdr
	}
	List_insert{
		Arg x__19
		Arg self_List
		Local isvoid
		Local x_20
		Param self_List 0
		x_20 = VCall List cdr
	}
	List_rcons{
		Arg x__21
		Arg self_List
		Local isvoid
		Local x_22
		Param self_List 0
		x_22 = VCall List cdr
	}
	List_print_list{
		Arg self_List
		Local isvoid
		Local x_23
		Param self_List 0
		x_23 = VCall List abort
	}
	initialize_List{
		Arg self_List
		Local isvoid
		Local return
		return = self_List
	}
	Cons_isNil{
		Arg self_Cons
		Local isvoid
		Local x_25
		x_25 = 0
	}
	Cons_init{
		Arg x__27
		Arg x__26
		Arg self_Cons
		Local isvoid
		Local x_28
		Local x_29
		Local x_30
		SetAttr self_Cons 0 x__27
		x_28 = GetAttr self_Cons 0
		SetAttr self_Cons 1 x__26
		x_29 = GetAttr self_Cons 1
		x_30 = self_Cons
	}
	Cons_car{
		Arg self_Cons
		Local isvoid
		Local x_31
		x_31 = GetAttr self_Cons 0
	}
	Cons_cdr{
		Arg self_Cons
		Local isvoid
		Local x_32
		x_32 = GetAttr self_Cons 1
	}
	Cons_rev{
		Arg self_Cons
		Local isvoid
		Local x_36
		Local x_34
		Local x_33
		Local x_35
		Local x_37
		Local x_38
		Local x_39
		x_33 = GetAttr self_Cons 1
		x_35 = Typeof x_33
		Param x_33 0
		x_34 = VCall x_35 rev
		x_37 = Typeof x_34
		x_39 = GetAttr self_Cons 0
		x_38 = x_39
		Param x_38 0
		Param x_34 1
		x_36 = VCall x_37 rcons
	}
	Cons_sort{
		Arg self_Cons
		Local isvoid
		Local x_43
		Local x_41
		Local x_40
		Local x_42
		Local x_44
		Local x_45
		Local x_46
		x_40 = GetAttr self_Cons 1
		x_42 = Typeof x_40
		Param x_40 0
		x_41 = VCall x_42 sort
		x_44 = Typeof x_41
		x_46 = GetAttr self_Cons 0
		x_45 = x_46
		Param x_45 0
		Param x_41 1
		x_43 = VCall x_44 insert
	}
	Cons_insert{
		Arg x__47
		Arg self_Cons
		Local isvoid
		Local x_48
		Local x_49
		Local x_52
		Local x_50
		Local x_51
		Local x_53
		Local x_54
		Local x_55
		Local x_56
		Local x_59
		Local x_57
		Local x_58
		Local x_60
		Local x_61
		Local x_62
		Local x_63
		Local x_65
		Local x_64
		Local x_66
		Local x_67
		Local x_68
		x_48 = GetAttr self_Cons 0
		x_49 = x__47 < x_48
		x_68 = x_49
		If x_68 Goto LABEL0
		x_50 = Allocate Cons
		Param x_50 0
		x_51 = Call initialize_Cons
		x_53 = Typeof x_50
		x_54 = x__47
		x_56 = self_Cons
		x_55 = x_56
		Param x_54 0
		Param x_55 1
		Param x_50 2
		x_52 = VCall x_53 init
		x_68 = x_52
		Goto LABEL1
		LABEL0:
		x_57 = Allocate Cons
		Param x_57 0
		x_58 = Call initialize_Cons
		x_60 = Typeof x_57
		x_62 = GetAttr self_Cons 0
		x_61 = x_62
		x_64 = GetAttr self_Cons 1
		x_66 = Typeof x_64
		x_67 = x__47
		Param x_67 0
		Param x_64 1
		x_65 = VCall x_66 insert
		x_63 = x_65
		Param x_61 0
		Param x_63 1
		Param x_57 2
		x_59 = VCall x_60 init
		x_68 = x_59
		LABEL1:
	}
	Cons_rcons{
		Arg x__69
		Arg self_Cons
		Local isvoid
		Local x_72
		Local x_70
		Local x_71
		Local x_73
		Local x_74
		Local x_75
		Local x_76
		Local x_78
		Local x_77
		Local x_79
		Local x_80
		x_70 = Allocate Cons
		Param x_70 0
		x_71 = Call initialize_Cons
		x_73 = Typeof x_70
		x_75 = GetAttr self_Cons 0
		x_74 = x_75
		x_77 = GetAttr self_Cons 1
		x_79 = Typeof x_77
		x_80 = x__69
		Param x_80 0
		Param x_77 1
		x_78 = VCall x_79 rcons
		x_76 = x_78
		Param x_74 0
		Param x_76 1
		Param x_70 2
		x_72 = VCall x_73 init
	}
	Cons_print_list{
		Arg self_Cons
		Local isvoid
		Local x_81
		Local x_82
		Local x_83
		Local x_84
		Local x_85
		Local x_87
		Local x_89
		Local x_88
		Local x_90
		x_83 = GetAttr self_Cons 0
		x_82 = x_83
		Param x_82 0
		Param self_Cons 1
		x_81 = VCall Cons out_int
		x_87 = Load x_86 -> 

		x_85 = x_87
		Param x_85 0
		Param self_Cons 1
		x_84 = VCall Cons out_string
		x_88 = GetAttr self_Cons 1
		x_90 = Typeof x_88
		Param x_88 0
		x_89 = VCall x_90 print_list
	}
	initialize_Cons{
		Arg self_Cons
		Local isvoid
		Local x_24
		Local return
		SetAttr self_Cons 0 x_24
		SetAttr self_Cons 1 isvoid
		return = self_Cons
	}
	Nil_isNil{
		Arg self_Nil
		Local isvoid
		Local x_91
		x_91 = 1
	}
	Nil_rev{
		Arg self_Nil
		Local isvoid
		Local x_92
		x_92 = self_Nil
	}
	Nil_sort{
		Arg self_Nil
		Local isvoid
		Local x_93
		x_93 = self_Nil
	}
	Nil_insert{
		Arg x__94
		Arg self_Nil
		Local isvoid
		Local x_95
		Local x_96
		x_96 = x__94
		Param x_96 0
		Param self_Nil 1
		x_95 = VCall Nil rcons
	}
	Nil_rcons{
		Arg x__97
		Arg self_Nil
		Local isvoid
		Local x_100
		Local x_98
		Local x_99
		Local x_101
		Local x_102
		Local x_103
		Local x_104
		x_98 = Allocate Cons
		Param x_98 0
		x_99 = Call initialize_Cons
		x_101 = Typeof x_98
		x_102 = x__97
		x_104 = self_Nil
		x_103 = x_104
		Param x_102 0
		Param x_103 1
		Param x_98 2
		x_100 = VCall x_101 init
	}
	Nil_print_list{
		Arg self_Nil
		Local isvoid
		Local x_105
		x_105 = 1
	}
	initialize_Nil{
		Arg self_Nil
		Local isvoid
		Local return
		return = self_Nil
	}
	Main_iota{
		Arg x__106
		Arg self_Main
		Local isvoid
		Local x_107
		Local x_108
		Local x_109
		Local x__110
		Local x_111
		Local x_114
		Local x_112
		Local x_113
		Local x_115
		Local x_116
		Local x_117
		Local x_118
		Local x_119
		Local x_120
		Local x_121
		Local x__110
		Local x_123
		Local x_124
		x_107 = Allocate Nil
		Param x_107 0
		x_108 = Call initialize_Nil
		SetAttr self_Main 0 x_107
		x_109 = GetAttr self_Main 0
		x__110 = 0
		LABEL2:
		x_111 = x__110 < x__106
		x_123 = x_111
		If x_123 Goto LABEL3
		x_112 = Allocate Cons
		Param x_112 0
		x_113 = Call initialize_Cons
		x_115 = Typeof x_112
		x_116 = x__110
		x_118 = GetAttr self_Main 0
		x_117 = x_118
		Param x_116 0
		Param x_117 1
		Param x_112 2
		x_114 = VCall x_115 init
		SetAttr self_Main 0 x_114
		x_119 = GetAttr self_Main 0
		x_120 = 1
		x_121 = x__110 + x_120
		x__110 = x_121
		Goto LABEL2
		LABEL3:
		x_124 = GetAttr self_Main 0
	}
	Main_main{
		Arg self_Main
		Local isvoid
		Local x_125
		Local x_126
		Local x_128
		Local x_136
		Local x_134
		Local x_132
		Local x_129
		Local x_130
		Local x_131
		Local x_133
		Local x_135
		Local x_137
		x_128 = Load x_127 -> How many numbers to sort?
		x_126 = x_128
		Param x_126 0
		Param self_Main 1
		x_125 = VCall Main out_string
		Param self_Main 0
		x_131 = VCall Main in_int
		x_130 = x_131
		Param x_130 0
		Param self_Main 1
		x_129 = VCall Main iota
		x_133 = Typeof x_129
		Param x_129 0
		x_132 = VCall x_133 rev
		x_135 = Typeof x_132
		Param x_132 0
		x_134 = VCall x_135 sort
		x_137 = Typeof x_134
		Param x_134 0
		x_136 = VCall x_137 print_list
	}
	initialize_Main{
		Arg self_Main
		Local isvoid
		Local return
		SetAttr self_Main 0 isvoid
		return = self_Main
	}
	main{
		Local x_139
		Local x_140
		Local x_138
		x_139 = Allocate Main
		Param x_139 0
		x_138 = Call initialize_Main
		Param x_139 0
		x_140 = Call Main_main
		halt
	}
