Types:
	Object{
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Object:initialize_Object
	}
	Int{
		attribute value
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Int:initialize_Int
	}
	Bool{
		attribute value
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method initialize_Bool:initialize_Bool
	}
	IO{
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
	}
	String{
		attribute value
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method length:String_length
		method concat:String_concat
		method substr:String_substring
		method initialize_String:initialize_String
	}
	Main{
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
		method main:Main_main
		method initialize_Main:initialize_Main
	}
	Complex{
		attribute x
		attribute y
		method copy:Object_copy
		method abort:Object_abort
		method type_name:Object_type_name
		method out_string:IO_out_string
		method out_int:IO_out_int
		method in_string:IO_in_string
		method in_int:IO_in_int
		method initialize_IO:initialize_IO
		method init:Complex_init
		method print:Complex_print
		method reflect_0:Complex_reflect_0
		method reflect_X:Complex_reflect_X
		method reflect_Y:Complex_reflect_Y
		method equal:Complex_equal
		method x_value:Complex_x_value
		method y_value:Complex_y_value
		method initialize_Complex:initialize_Complex
	}
Data:
	_vacio="vacio"
	x_18="=)
"
	x_22="=(
"
	x_36="=)
"
	x_40="=(
"
	x_62="+"
	x_71="I"
Code:
	initialize_Object{
		Arg instance
	}
	initialize_Int{
		Arg instance
	}
	initialize_Bool{
		Arg instance
	}
	initialize_IO{
		Arg instance
	}
	initialize_String{
		Arg instance
	}
	Object_copy{
		Arg to_copy
		Local isvoid
		Local save_copy
		save_copy = Copy to_copy
	}
	Object_abort{
		Arg self_Object
		Local isvoid
		halt
	}
	Object_type_name{
		Arg self_Object
		Local name
		Local type_name_ref
		Local isvoid
		name = Typeof self_Object
		type_name_ref = Type_Name name
	}
	IO_out_string{
		Arg out_string
		Arg self_IO
		Local isvoid
		Print out_string
		out_string = self_IO
	}
	IO_out_int{
		Arg out_int
		Arg self_IO
		Local isvoid
		Print out_int
		out_int = self_IO
	}
	IO_in_string{
		Arg self_IO
		Local isvoid
		Local x_in_string
		x_in_string = Read
	}
	IO_in_int{
		Arg self_IO
		Local x_in_int
		Local isvoid
		x_in_int = Read
	}
	String_length{
		Arg x_str
		Local x_str_length
		Local isvoid
		x_str_length = Length x_str
	}
	String_concat{
		Arg self_String
		Arg x_str1
		Local x_str_concat
		Local isvoid
		x_str_concat = Concat x_str1 self_String
	}
	String_substring{
		Arg self_String
		Arg x_j
		Arg x_i
		Local x_sub_str
		Local isvoid
		x_sub_str = Substring self_String x_j x_i
	}
	Main_main{
		Arg self_Main
		Local isvoid
		Local x_2
		Local x_0
		Local x_1
		Local x_3
		Local x_4
		Local x_5
		Local x_6
		Local x_7
		Local x__8
		Local x_9
		Local x_10
		Local x_11
		Local x_12
		Local x_13
		Local x_14
		Local x_15
		Local x_16
		Local x_17
		Local x_19
		Local x_20
		Local x_21
		Local x_23
		Local x_24
		Local x_29
		Local x_27
		Local x_25
		Local x_26
		Local x_28
		Local x_30
		Local x_31
		Local x_32
		Local x_33
		Local x_34
		Local x_35
		Local x_37
		Local x_38
		Local x_39
		Local x_41
		Local x_42
		x_0 = Allocate Complex
		Param x_0 0
		x_1 = Call initialize_Complex
		x_3 = Typeof x_0
		x_5 = 1
		x_4 = x_5
		x_7 = 1
		x_6 = x_7
		Param x_4 0
		Param x_6 1
		Param x_0 2
		x_2 = VCall x_3 init
		x__8 = x_2
		x_10 = Typeof x__8
		Param x__8 0
		x_9 = VCall x_10 print
		x_12 = Typeof x__8
		Param x__8 0
		x_11 = VCall x_12 reflect_X
		x_14 = Typeof x__8
		Param x__8 0
		x_13 = VCall x_14 reflect_0
		x_15 = x_11 == x_13
		x_24 = x_15
		If x_24 Goto LABEL0
		x_19 = Load x_18 -> =)

		x_17 = x_19
		Param x_17 0
		Param self_Main 1
		x_16 = VCall Main out_string
		x_24 = x_16
		Goto LABEL1
		LABEL0:
		x_23 = Load x_22 -> =(

		x_21 = x_23
		Param x_21 0
		Param self_Main 1
		x_20 = VCall Main out_string
		x_24 = x_20
		LABEL1:
		x_26 = Typeof x__8
		Param x__8 0
		x_25 = VCall x_26 reflect_X
		x_28 = Typeof x_25
		Param x_25 0
		x_27 = VCall x_28 reflect_Y
		x_30 = Typeof x_27
		x_33 = Typeof x__8
		Param x__8 0
		x_32 = VCall x_33 reflect_0
		x_31 = x_32
		Param x_31 0
		Param x_27 1
		x_29 = VCall x_30 equal
		x_42 = x_29
		If x_42 Goto LABEL2
		x_37 = Load x_36 -> =)

		x_35 = x_37
		Param x_35 0
		Param self_Main 1
		x_34 = VCall Main out_string
		x_42 = x_34
		Goto LABEL3
		LABEL2:
		x_41 = Load x_40 -> =(

		x_39 = x_41
		Param x_39 0
		Param self_Main 1
		x_38 = VCall Main out_string
		x_42 = x_38
		LABEL3:
	}
	initialize_Main{
		Arg self_Main
		Local isvoid
		Local return
		return = self_Main
	}
	Complex_init{
		Arg x__46
		Arg x__45
		Arg self_Complex
		Local isvoid
		Local x_47
		Local x_48
		Local x_49
		SetAttr self_Complex 0 x__46
		x_47 = GetAttr self_Complex 0
		SetAttr self_Complex 1 x__45
		x_48 = GetAttr self_Complex 1
		x_49 = self_Complex
	}
	Complex_print{
		Arg self_Complex
		Local isvoid
		Local x_50
		Local x_51
		Local x_52
		Local x_53
		Local x_54
		Local x_55
		Local x_68
		Local x_64
		Local x_59
		Local x_56
		Local x_57
		Local x_58
		Local x_60
		Local x_61
		Local x_63
		Local x_65
		Local x_66
		Local x_67
		Local x_69
		Local x_70
		Local x_72
		Local x_73
		x_50 = GetAttr self_Complex 1
		x_51 = 0
		x_52 = x_50 == x_51
		x_73 = x_52
		If x_73 Goto LABEL4
		x_55 = GetAttr self_Complex 0
		x_54 = x_55
		Param x_54 0
		Param self_Complex 1
		x_53 = VCall Complex out_int
		x_73 = x_53
		Goto LABEL5
		LABEL4:
		x_58 = GetAttr self_Complex 0
		x_57 = x_58
		Param x_57 0
		Param self_Complex 1
		x_56 = VCall Complex out_int
		x_60 = Typeof x_56
		x_63 = Load x_62 -> +
		x_61 = x_63
		Param x_61 0
		Param x_56 1
		x_59 = VCall x_60 out_string
		x_65 = Typeof x_59
		x_67 = GetAttr self_Complex 1
		x_66 = x_67
		Param x_66 0
		Param x_59 1
		x_64 = VCall x_65 out_int
		x_69 = Typeof x_64
		x_72 = Load x_71 -> I
		x_70 = x_72
		Param x_70 0
		Param x_64 1
		x_68 = VCall x_69 out_string
		x_73 = x_68
		LABEL5:
	}
	Complex_reflect_0{
		Arg self_Complex
		Local isvoid
		Local x_74
		Local x_75
		Local x_77
		Local x_76
		Local x_78
		Local x_79
		Local x_80
		Local x_82
		Local x_81
		Local x_83
		Local x_84
		x_74 = GetAttr self_Complex 0
		x_75 = GetAttr self_Complex 0
		x_77 = 0
		x_76 = x_77 - x_75
		x_78 = x_74 == x_76
		x_79 = GetAttr self_Complex 1
		x_80 = GetAttr self_Complex 1
		x_82 = 0
		x_81 = x_82 - x_80
		x_83 = x_79 == x_81
		x_84 = self_Complex
	}
	Complex_reflect_X{
		Arg self_Complex
		Local isvoid
		Local x_85
		Local x_86
		Local x_88
		Local x_87
		Local x_89
		Local x_90
		x_85 = GetAttr self_Complex 1
		x_86 = GetAttr self_Complex 1
		x_88 = 0
		x_87 = x_88 - x_86
		x_89 = x_85 == x_87
		x_90 = self_Complex
	}
	Complex_reflect_Y{
		Arg self_Complex
		Local isvoid
		Local x_91
		Local x_92
		Local x_94
		Local x_93
		Local x_95
		Local x_96
		x_91 = GetAttr self_Complex 0
		x_92 = GetAttr self_Complex 0
		x_94 = 0
		x_93 = x_94 - x_92
		x_95 = x_91 == x_93
		x_96 = self_Complex
	}
	Complex_equal{
		Arg x__97
		Arg self_Complex
		Local isvoid
		Local x_98
		Local x_99
		Local x_100
		Local x_101
		Local x_102
		Local x_103
		Local x_104
		Local x_105
		Local x_106
		Local x_107
		Local x_108
		Local x_109
		Local x_110
		x_98 = GetAttr self_Complex 0
		x_100 = Typeof x__97
		Param x__97 0
		x_99 = VCall x_100 x_value
		x_101 = x_98 == x_99
		x_110 = x_101
		If x_110 Goto LABEL8
		x_102 = GetAttr self_Complex 1
		x_104 = Typeof x__97
		Param x__97 0
		x_103 = VCall x_104 y_value
		x_105 = x_102 == x_103
		x_108 = x_105
		If x_108 Goto LABEL6
		x_106 = 1
		x_108 = x_106
		Goto LABEL7
		LABEL6:
		x_107 = 0
		x_108 = x_107
		LABEL7:
		x_110 = x_108
		Goto LABEL9
		LABEL8:
		x_109 = 0
		x_110 = x_109
		LABEL9:
	}
	Complex_x_value{
		Arg self_Complex
		Local isvoid
		Local x_111
		x_111 = GetAttr self_Complex 0
	}
	Complex_y_value{
		Arg self_Complex
		Local isvoid
		Local x_112
		x_112 = GetAttr self_Complex 1
	}
	initialize_Complex{
		Arg self_Complex
		Local isvoid
		Local x_43
		Local x_44
		Local return
		SetAttr self_Complex 0 x_43
		SetAttr self_Complex 1 x_44
		return = self_Complex
	}
	main{
		Local x_114
		Local x_115
		Local x_113
		x_114 = Allocate Main
		Param x_114 0
		x_113 = Call initialize_Main
		Param x_114 0
		x_115 = Call Main_main
		halt
	}
